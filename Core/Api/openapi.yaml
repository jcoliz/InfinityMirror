openapi: 3.1.0
info:
  title: "Infinity Mirror Service API"
  version: 1.0.0
  description: "API for managing and interacting with the Infinity Mirror service. Infinity Mirror is a fictional startup building a deception-based security solution that deploys decoys, lures, and honeytokens to detect attackers inside networks with high fidelity."
security:
  - ApiKeyAuth: []
paths:
  '/api/infm/v1/events':
    get:
      operationId: InfinityMirror_GetDeceptionEvents
      parameters:
        - name: startingAt
          in: query
          description: "Include only results after this UTC date/time (exclusive)"
          schema:
            type: string
            format: date-time
        - name: endingAt
          in: query
          description: "Include only results on or before this UTC date/time (inclusive)"
          schema:
            type: string
            format: date-time
        - name: limit
          in: query
          schema:
            type: integer
        - name: offset
          in: query
          schema:
            type: integer
        - name: User-Agent
          in: header
          schema:
            type: string
        - name: X-API-Key
          in: header
          schema:
            type: string
      responses:
        200:
          description: Deception events retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeceptionEventResponse'
components:
  schemas:
    DeceptionEventResponse:
      type: object
      additionalProperties: false
      properties:
        data:
          type: array
          items: 
            $ref: '#/components/schemas/DeceptionEvent'
        pagination:
          $ref: '#/components/schemas/Pagination'
    Pagination:
      type: object
      additionalProperties: false
      properties:
        nextOffset:
          description: "The offset to use for the next page of results. If null, there are no more results."
          type: integer
    DeceptionEvent:
      type: object
      additionalProperties: false
      description: "Infinity Mirror Deception Event (InfinityMirrorDeceptionEvent_CL)."
      properties:
        TimeOnClient:
          type: string
          format: date-time
          description: "UTC time the message was generated on the client side."
        Id:
          type: string
          #format: uuid
          nullable: true
          description: "Unique identifier GUID for the event. This is a string to match the template format."
        Message:
          type: string
          description: "Detailed description of the event (might include attacker actions)"
          default: ""
        Properties:
          $ref: "#/components/schemas/MessageProperties"
          description: "Dynamic properties associated with the message"
        Category:
          type: string
          nullable: true
          description: "Category of event (policy or trap type) associated with the message (e.g. \"Network\", \"Host\", \"Application\")"
        Severity:
          $ref: "#/components/schemas/SeverityLevel"
          nullable: true
          description: "How severe of an attack is indicated by this event"
        Campaign:
          type: string
          nullable: true
          description: "Campaign name associated with the event (if applicable). This can be used to group related events together."
        Decoy:
          $ref: "#/components/schemas/DecoyInfo"
          description: "Information about the decoy asset that generated the event. This includes the decoy name, type, and any associated comments."
        DeviceEventClass:
          type: string
          nullable: true
          description: "Describes the attacker activity which was detected, leading to the event."
        SourceAddress:
          type: string
          nullable: true
          description: "Attacker IP address"
        SourceHostName:
          type: string
          nullable: true
          description: "Attacker host name (if resolved)"
        SourceHostId:
          type: string
          nullable: true
          description: "Attacker machine unique identifier GUID (if available from the decoy system)"
        DestinationAddress:
          type: string
          nullable: true
          description: "Decoy asset IP that was targeted"
        DestinationPort:
          type: string
          nullable: true
          description: "Decoy service port targeted (if network connection)"
        MitreTechnique:
          $ref: "#/components/schemas/MitreTechnique"
          description: "MITRE ATT&CK technique associated with the event (if applicable). This includes the tactic and technique name and ID."
        FileHash:
          type: string
          nullable: true
          description: "Hash of any malware or tool captured during the event (if applicable). This can be used to identify known malicious files."
        User:
          type: string
          nullable: true
          description: "User account name associated with the event (if applicable). This can help identify which user was involved in the activity."
      required:
        - TimeOnClient
        - Message
        - Properties
        - Decoy
    MitreTechnique:
      type: object
      properties:
        tactic:
          $ref: "#/components/schemas/MitreTactic"
        Name:
          type: string
          default: ""
        Id:
          type: string
          default: ""
      required:
        - tactic
        - name
        - id

    MitreTactic:
      type: object
      properties:
        Name:
          $ref: "#/components/schemas/MitreTacticName"
        Id:
          type: string
          default: ""
      required:
        - name
        - id

    DecoyInfo:
      type: object
      properties:
        Name:
          type: string
          default: ""
        Comment:
          type: string
          default: ""
        Type:
          $ref: "#/components/schemas/DecoyType"
        Id:
          type: string
          #format: uuid
          nullable: true
      required:
        - name
        - comment
        - type

    MessageProperties:
      type: object
      properties:
        SessionId:
          type: string
          format: uuid
          nullable: true
        Comment:
          type: string
          nullable: true
        SequenceNumber:
          type: integer
          format: int32
        Generation:
          $ref: "#/components/schemas/MessageGenerationProperties"
          nullable: true
        UserAgent:
          type: string
          description: "User-Agent string from the CCF client that requested the event"
          nullable: true
        ApiKey:
          type: string
          description: "API key from the CCF client that requested the event"
          nullable: true
      required:
        - sequenceNumber

    MessageGenerationProperties:
      type: object
      properties:
        MessagesPerInterval:
          type: integer
          format: int32
          default: 10
        Interval:
          $ref: "#/components/schemas/GenerationInterval"
          default: "Cycle"
      required:
        - messagesPerInterval
        - interval

    SeverityLevel:
      type: string
      enum:
        - "Unknown"
        - "Debug"
        - "Low"
        - "Medium"
        - "High"
        - "Critical"

    DecoyType:
      type: string
      enum:
        - "VirtualMachine"
        - "NetworkDevice"
        - "Application"
        - "Cluster"
        - "Database"
        - "File"
        - "FileShare"
        - "Identity"
        - "IoTSensor"
        - "Other"

    MitreTacticName:
      type: string
      enum:
        - "Unknown"
        - "Reconnaissance"
        - "ResourceDevelopment"
        - "InitialAccess"
        - "Execution"
        - "Persistence"
        - "PrivilegeEscalation"
        - "DefenseEvasion"
        - "CredentialAccess"
        - "Discovery"
        - "LateralMovement"
        - "Collection"
        - "Exfiltration"
        - "CommandAndControl"
        - "Impact"

    GenerationInterval:
      type: string
      enum:
        - "Never"
        - "Session"
        - "Cycle"
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for authentication